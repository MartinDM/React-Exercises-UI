{"version":3,"sources":["components/Exercise/Exercise.js","components/ExerciseList/ExerciseList.js","components/Loading/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","modal","display","alignItems","justifyContent","StyledGenderSwitch","withStyles","switchBase","color","backgroundColor","checked","track","opacity","thumb","border","background","Switch","Exercise","exercise","useState","gender","setGender","classes","open","setOpen","bodyAreas","handleClose","Grid","container","direction","justify","spacing","className","item","sm","name","length","map","area","i","Chip","label","Button","onClick","variant","endIcon","xs","style","backgroundImage","image","src","alt","FormGroup","component","onChange","event","target","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","maxWidth","id","ReactHtmlParser","transcript","ExerciseList","exercises","ex","href","theme","backdrop","zIndex","drawer","Loading","success","CircularProgress","App","isLoaded","setLoaded","setSuccess","setExercises","useEffect","fetchExercises","delayLoad","setTimeout","a","axios","url","then","res","data","catch","err","exerciseListComponent","loadingComponent","Container","fixed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38a53dee.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport ReactHtmlParser from 'react-html-parser';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from \"@material-ui/core/Grid\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Switch from '@material-ui/core/Switch';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport Close from '@material-ui/icons/Close';\nimport './Exercise.scss';\n\n/* Styled components */\n\nconst useStyles = makeStyles(() => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}));\n\nconst StyledGenderSwitch = withStyles({\n  switchBase: {\n    color: '#333',\n    \"&$checked\": {\n      color: '#333;',\n    },\n    \"&$checked + $track\": {\n      backgroundColor: '#333',\n      color: '#333',\n    }\n  },\n  checked: {},\n  track: {\n    backgroundColor: '#333',\n    opacity: 0.5\n  },\n  thumb: {\n    border: '2px solid white',\n    background: '2px solid white'\n  }\n})(Switch);\n\nexport default function Exercise({ exercise }) {\n\n  /* Hooks */\n  const [gender, setGender] = useState('female');\n\n  /* Modal styles */\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  /* Data */\n  const bodyAreas = exercise.bodyAreas;\n\n  /* Methods */\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onGenderToggle = event => {\n    setGender(event.target.checked ? 'male' : 'female');\n  };\n\n  return (\n    <Grid container\n      direction=\"row\" justify=\"space-between\"\n      spacing={2}\n      className=\"exercise\">\n      <Grid item sm={8}>\n        <h1 className=\"h2 exercise__title\">\n          {exercise.name}\n        </h1>\n        {bodyAreas.length >= 0 &&\n          <div className=\"exercise__areas\">\n            <h3 className=\"h5 exercise__areas-title\">Muscle groups:</h3>\n            <ul className=\"exercise__areas-list\">\n              {bodyAreas.map((area, i) => <li key={i}><Chip label={area} /></li>)}\n            </ul>\n          </div>\n        }\n        <div className=\"exercise__details\">\n          <Button\n            onClick={handleOpen}\n            variant=\"contained\"\n            className=\"exercise__details-toggle\"\n            endIcon={<PresentToAllIcon />}\n          >\n            See details\n          </Button>\n        </div>\n\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <div className=\"exercise__image\"\n          style={{\n            backgroundImage: `linear-gradient(0deg, rgba(0,125,181,1) 0%,\n                            rgba(1,148,214,0) 71%),\n                            url(${exercise[gender].image})`\n          }}>\n          <img src={exercise[gender].image} alt={exercise.name} className=\"u-visually-hidden\" />\n        </div>\n        <FormGroup className=\"exercise__gender-toggle\">\n          <h3 className=\"h5 exercise__gender-toggle-title\">Demo by:</h3>\n          <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n            <Grid item>Female</Grid>\n            <Grid item>\n              <StyledGenderSwitch color=\"default\" checked={(gender === 'male')} onChange={onGenderToggle} name=\"gender\" />\n            </Grid>\n            <Grid item>Male</Grid>\n          </Grid>\n        </FormGroup>\n      </Grid>\n      <Modal\n        aria-labelledby=\"exercise-title\"\n        aria-describedby=\"exercise-steps\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <Grid container\n            justify=\"center\"\n            direction=\"row\"\n            maxWidth=\"md\"\n            className=\"modal\">\n            <Grid\n              item\n              className=\"modal__content\">\n              <Close className=\"modal-close\" style={{ color: '#53565a' }} onClick={handleClose} />\n              <div className=\"exercise__content\" id=\"exercise-steps\">\n                <h2 className=\"h2 exercise__title exercise__title--modal\" id=\"exercise-title\">{exercise.name}</h2>\n                {ReactHtmlParser(exercise.transcript)}\n              </div>\n            </Grid>\n          </Grid>\n        </Fade>\n      </Modal>\n    </Grid>\n  );\n};\n\nExercise.propTypes = {\n  /** Composition of the Exercise */\n  exercise: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    male: PropTypes.object,\n    female: PropTypes.object,\n    bodyAreas: PropTypes.array,\n  }),\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Exercise from '../Exercise';\nimport './ExerciseList.scss';\n\nexport default function ExerciseList({ exercises }) {\n\n  if (exercises.length === 0 || !exercises) {\n    return (\n      <div className=\"exercise-list--empty\">\n        <div className=\"message-area\">\n          <h1 className=\"h2 message-area__title\">Oops</h1>\n          <p><strong>No exercises to show right now! 😧 </strong></p>\n          <p>Fear not! Get workout tips from the team at <a href=\"https://central.gymshark.com/category/conditioning\">Gymshark Central</a></p>\n        </div>\n      </div>\n    ); \n  } \n  return (\n    <div className=\"exercise-list\">\n    {exercises.map( (ex, i) => (\n      <Exercise className=\"exercise\" exercise={ex} key={ex.id}  />\n    ))}\n    </div>\n  );\n}\n\nExerciseList.propTypes = {\n  exercises: PropTypes.array\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#007db5',\n    backgroundColor: 'white',\n  },\n}));\n\nexport default function Loading( success ) {\n\n  const classes = useStyles();\n  if( !success ) {\n    return (\n      <div>\n        <p>Oops! There was an error behind the scenes 😧</p>\n        <p>Fear not! Get workout tips from the team at <a href=\"https://central.gymshark.com/category/conditioning\">Gymshark Central</a></p>\n      </div>\n    )\n  } else {\n    return (\n      <>\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      </>\n    );\n  }\n};\n\nLoading.propTypes = {\n  success: PropTypes.bool,\n};","import React, { useState, useEffect } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport ExerciseList from './components/ExerciseList';\nimport Loading from './components/Loading';\nimport axios from 'axios';\n\nexport default function App() {\n\n  /*  Hooks */\n  const [isLoaded, setLoaded] = useState();\n  const [success, setSuccess] = useState(true);\n  const [exercises, setExercises] = useState([]);\n\n  /* Could be stored in .env file if keys */\n  const GS_ENDPOINT = 'https://private-922d75-recruitmenttechnicaltest.apiary-mock.com/customexercises/';\n\n  useEffect(() => {\n      fetchExercises();\n  }, []);\n\n  // Short delay for demo and user feedback\n  const delayLoad = () => {\n    setTimeout(() => {\n      setLoaded(true);\n    }, 1000);\n  }\n\n  const fetchExercises = async () => {\n    await axios({\n      url: GS_ENDPOINT,\n      timeout: 1000\n    })\n      .then(res => {\n        const exerciseData = res.data;\n        const exercises = exerciseData.exercises;\n        setExercises(exercises);\n        delayLoad();\n      })\n      .catch(function (err) {\n        delayLoad();\n        setSuccess(false);\n      })\n  };\n\n  /* Components */\n  const exerciseListComponent = <ExerciseList exercises={exercises} />;\n  const loadingComponent = <Loading success={success} />;\n\n  return (\n    <>\n      <Container fixed maxWidth=\"md\">\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n        >\n        { !isLoaded || !success ? loadingComponent : exerciseListComponent}\n        </Grid>\n      </Container>\n    </>\n  );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}